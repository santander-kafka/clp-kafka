spring.application.name: clp-profitability-app

spring.kafka.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094

spring.cloud.function.definition=aggregate

spring.cloud.stream.bindings.aggregate-in-0.destination=CLP_ORDER.*
spring.cloud.stream.kafka.streams.bindings.aggregate-in-0.consumer.destination-is-pattern=true
spring.cloud.stream.kafka.streams.bindings.aggregate-in-0.consumer.value-serde=com.example.eventcommons.event.serde.DefaultEventSerde

spring.cloud.stream.kafka.streams.binder.functions.aggregate.applicationId=clp-profitability-app
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=com.example.eventcommons.event.serde.DefaultEventDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=com.example.eventcommons.event.serde.DefaultEventSerializer

spring.cloud.stream.kafka.streams.binder.configuration.metadata.max.age.ms=10000
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.binder.configuration.auto.offset.reset=earliest
spring.cloud.stream.kafka.binder.configuration.internal.leave.group.on.close=true

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver

server.port=8195

spring.output.ansi.enabled: ALWAYS

logging.pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"